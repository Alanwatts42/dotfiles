
==============================================================================
conform: require("conform.health").check()

conform.nvim report ~
- Log file: /home/evan/.local/state/nvim/conform.log
- OK jq ready (json)
- OK prettier ready (html, css, javascript)
- OK prettierd ready (html, css, javascript)
- OK stylua ready (lua)
- OK tidy ready (html, css, xhtml)
- OK xmllint ready (xhtml, xsd, xml)

==============================================================================
dap: require("dap.health").check()

dap: Adapters ~

dap: Sessions ~
- OK No active sessions

==============================================================================
diffview: require("diffview.health").check()

Checking plugin dependencies ~
- OK nvim-web-devicons installed.

Checking VCS tools ~
- The plugin requires at least one of the supported VCS tools to be valid.
- OK Git found.
- OK Git is up-to-date. (2.34.1)
- OK Mercurial found.
- OK Mercurial is up-to-date. (6.1.1)

==============================================================================
dressing: require("dressing.health").check()

dressing.nvim ~
- OK vim.ui.input active
- OK vim.ui.select active: telescope

==============================================================================
hydra: require("hydra.health").check()

- ERROR Failed to run healthcheck for "hydra" plugin. Exception:
  ...n/.local/share/nvim/lazy/hydra.nvim/lua/hydra/health.lua:3: attempt to call field 'report_start' (a nil value)
  

==============================================================================
jupytext: require("jupytext.health").check()

- ERROR Failed to run healthcheck for "jupytext" plugin. Exception:
  ...al/share/nvim/lazy/jupytext.nvim/lua/jupytext/health.lua:4: attempt to call field 'report_start' (a nil value)
  

==============================================================================
lazy: require("lazy.health").check()

lazy.nvim ~
- {lazy.nvim} version `11.9.2`
- OK {git} `version 2.34.1`
- OK no existing packages found by other package managers
- OK packer_compiled.lua not found

luarocks ~
- checking `luarocks` installation
- OK no plugins require `luarocks`, so you can ignore any warnings below
- OK {luarocks} `/usr/local/bin/luarocks 3.11.1`
- OK {lua5.1} `Lua 5.1.5  Copyright (C) 1994-2012 Lua.org, PUC-Rio`

==============================================================================
lspsaga: require("lspsaga.health").check()

Lspsaga.nvim report ~
- OK `tree-sitter` found 
- ERROR tree-sitter `markdown` parser not found
- ERROR tree-sitter `markdown_inline` parser not found

==============================================================================
luarocks-nvim: require("luarocks-nvim.health").check()

luarocks.nvim ~
- luarocks system is not prepared
- OK git is installed
- OK lua is installed
- OK make is installed

==============================================================================
luasnip: require("luasnip.health").check()

luasnip ~
- WARNING             For Variable/Placeholder-transformations, luasnip requires
              the jsregexp library. See `:help |luasnip-lsp-snippets-transformations`| for advice
          

==============================================================================
mason: require("mason.health").check()

mason.nvim ~
- OK mason.nvim version v1.10.0
- OK PATH: prepend
- OK Providers: 
    mason.providers.registry-api
    mason.providers.client
- OK neovim version >= 0.7.0

mason.nvim [Registries] ~
- OK Registry `github.com/mason-org/mason-registry version: 2024-07-04-one-flavor` is installed.

mason.nvim [Core utils] ~
- OK unzip: `UnZip 6.00 of 20 April 2009, by Debian. Original by Info-ZIP.`
- OK wget: `GNU Wget 1.21.2 built on linux-gnu.`
- OK curl: `curl 7.81.0 (x86_64-pc-linux-gnu) libcurl/7.81.0 OpenSSL/3.0.2 zlib/1.2.11 brotli/1.0.9 zstd/1.4.8 libidn2/2.3.2 libpsl/0.21.0 (+libidn2/2.3.2) libssh/0.9.6/openssl/zlib nghttp2/1.43.0 librtmp/2.3 OpenLDAP/2.5.17`
- OK gzip: `gzip 1.10`
- OK tar: `tar (GNU tar) 1.34`
- OK bash: `GNU bash, version 5.1.16(1)-release (x86_64-pc-linux-gnu)`
- OK sh: `Ok`

mason.nvim [Languages] ~
- OK Ruby: `ruby 3.0.2p107 (2021-07-07 revision 0db68f0233) [x86_64-linux-gnu]`
- OK cargo: `cargo 1.75.0`
- OK Go: `go version go1.18.1 linux/amd64`
- OK luarocks: `/usr/local/bin/luarocks 3.11.1`
- OK PHP: `PHP 8.1.2-1ubuntu2.18 (cli) (built: Jun 14 2024 15:52:55) (NTS)`
- WARNING javac: not available
  - ADVICE:
    - spawn: javac failed with exit code - and signal -. javac is not executable
- OK node: `v22.4.0`
- WARNING julia: not available
  - ADVICE:
    - spawn: julia failed with exit code - and signal -. julia is not executable
- OK python: `Python 3.12.4`
- OK RubyGem: `3.3.5`
- OK Composer: `Composer 2.2.6 2022-02-04 17:00:38`
- OK java: `openjdk version "11.0.23" 2024-04-16`
- OK npm: `10.8.1`
- OK pip: `pip 24.0 from /home/evan/miniconda3/lib/python3.12/site-packages/pip (python 3.12)`
- OK python venv: `Ok`

mason.nvim [GitHub] ~
- OK GitHub API rate limit. Used: 0. Remaining: 60. Limit: 60. Reset: Thu 04 Jul 2024 12:39:22 PM CDT.
  Install and authenticate via gh-cli to increase rate limit.

==============================================================================
nvim-treesitter: require("nvim-treesitter.health").check()

Installation ~
- OK `tree-sitter` found 0.22.6 (b40f342067a89cd6331bf4c27407588320f3c263) (parser generator, only needed for :TSInstallFromGrammar)
- OK `node` found v22.4.0 (only needed for :TSInstallFromGrammar)
- OK `git` executable found.
- OK `cc` executable found. Selected from { vim.NIL, "cc", "gcc", "clang", "cl", "zig" }
  Version: cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
- OK Neovim was compiled with tree-sitter runtime ABI version 14 (required >=13). Parsers must be compatible with runtime ABI.

OS Info:
{
  machine = "x86_64",
  release = "6.5.0-41-generic",
  sysname = "Linux",
  version = "#41~22.04.2-Ubuntu SMP PREEMPT_DYNAMIC Mon Jun  3 11:32:55 UTC 2"
} ~

Parser/Features         H L F I J
  - cpp                 ✓ ✓ ✓ ✓ ✓
  - css                 ✓ . ✓ ✓ ✓
  - dockerfile          ✓ . . . ✓
  - html                ✓ ✓ ✓ ✓ ✓
  - java                ✓ ✓ ✓ ✓ ✓
  - javascript          ✓ ✓ ✓ ✓ ✓
  - json                ✓ ✓ ✓ ✓ .
  - lua                 ✓ ✓ ✓ ✓ ✓
  - python              ✓ ✓ ✓ ✓ ✓
  - rust                ✓ ✓ ✓ ✓ ✓
  - typescript          ✓ ✓ ✓ ✓ ✓
  - vue                 ✓ . ✓ ✓ ✓
  - yaml                ✓ ✓ ✓ ✓ ✓

  Legend: H[ighlight], L[ocals], F[olds], I[ndents], In[j]ections
         +) multiple parsers found, only one will be used
         x) errors found in the query, try to run :TSUpdate {lang} ~

==============================================================================
rainbow-delimiters: require("rainbow-delimiters.health").check()

- No custom configuration; see :help |rb-delimiters-setup| for information.

==============================================================================
telescope: health#telescope#check

Checking for required plugins ~
- OK plenary installed.
- OK nvim-treesitter installed.

Checking external dependencies ~
- OK rg: found ripgrep 13.0.0
- OK fd: found fd 8.3.1

===== Installed extensions ===== ~

Telescope Extension: `dap` ~
- No healthcheck provided

Telescope Extension: `frecency` ~
- OK nvim-web-devicons installed.
- OK ripgrep installed.

Telescope Extension: `fzf` ~
- OK lib working as expected
- OK file_sorter correctly configured
- OK generic_sorter correctly configured

Telescope Extension: `neoclip` ~
- No healthcheck provided

Telescope Extension: `zoxide` ~
- No healthcheck provided

==============================================================================
vim.deprecated: require("vim.deprecated.health").check()

- OK No deprecated functions detected

==============================================================================
vim.health: require("vim.health.health").check()

Configuration ~
- OK no issues found

Runtime ~
- OK $VIMRUNTIME: /usr/share/nvim/runtime

Performance ~
- OK Build type: RelWithDebInfo

Remote Plugins ~
- OK Up to date

terminal ~
- key_backspace (kbs) terminfo entry: `key_backspace=^H`
- key_dc (kdch1) terminfo entry: `key_dc=\E[3~`
- $VTE_VERSION="6800"
- $TERM_PROGRAM="tmux"
- $COLORTERM="truecolor"

tmux ~
- ERROR `escape-time` (500) is higher than 300ms
  - ADVICE:
    - set escape-time in ~/.tmux.conf:
      set-option -sg escape-time 10
    - https://github.com/neovim/neovim/blob/master/BUILD.md#building
- WARNING `focus-events` is not enabled. |'autoread'| may not work.
  - ADVICE:
    - (tmux 1.9+ only) Set `focus-events` in ~/.tmux.conf:
      set-option -g focus-events on
- $TERM: xterm-256color
- default-terminal: screen
- ERROR $TERM differs from the tmux `default-terminal` setting. Colors might look wrong.
  - ADVICE:
    - $TERM may have been set by some rc (.bashrc, .zshrc, ...).

External Tools ~
- OK ripgrep 13.0.0 (/usr/bin/rg)

==============================================================================
vim.lsp: require("vim.lsp.health").check()

- LSP log level : WARN
- Log path: /home/evan/.local/state/nvim/lsp.log
- Log size: 30 KB

vim.lsp: Active Clients ~
- No active clients

vim.lsp: File Watcher ~
- file watching "(workspace/didChangeWatchedFiles)" disabled on all clients

vim.lsp: Position Encodings ~
- No active clients

==============================================================================
vim.provider: require("vim.provider.health").check()

Clipboard (optional) ~
- OK Clipboard tool found: xclip

Node.js provider (optional) ~
- Node.js: v22.4.0
  
- WARNING Missing "neovim" npm (or yarn, pnpm) package.
  - ADVICE:
    - Run in shell: npm install -g neovim
    - Run in shell (if you use yarn): yarn global add neovim
    - Run in shell (if you use pnpm): pnpm install -g neovim
    - You may disable this provider (and warning) by adding `let g:loaded_node_provider = 0` to your init.vim

Perl provider (optional) ~
- WARNING "Neovim::Ext" cpan module is not installed
  - ADVICE:
    - See :help |provider-perl| for more information.
    - You may disable this provider (and warning) by adding `let g:loaded_perl_provider = 0` to your init.vim
- WARNING No usable perl executable found

Python 3 provider (optional) ~
- `g:python3_host_prog` is not set. Searching for python3 in the environment.
- Executable: /home/evan/miniconda3/bin/python3
- Python version: 3.12.4
- pynvim version: 0.5.0
- OK Latest pynvim is installed.

Python virtualenv ~
- OK no $VIRTUAL_ENV

Ruby provider (optional) ~
- Ruby: ruby 3.0.2p107 (2021-07-07 revision 0db68f0233) [x86_64-linux-gnu]
- WARNING `neovim-ruby-host` not found.
  - ADVICE:
    - Run `gem install neovim` to ensure the neovim RubyGem is installed.
    - Run `gem environment` to ensure the gem bin directory is in $PATH.
    - If you are using rvm/rbenv/chruby, try "rehashing".
    - See :help |g:ruby_host_prog| for non-standard gem installations.
    - You may disable this provider (and warning) by adding `let g:loaded_ruby_provider = 0` to your init.vim

==============================================================================
vim.treesitter: require("vim.treesitter.health").check()

- Nvim runtime ABI version: 14
- OK Parser: cpp                  ABI: 14, path: /home/evan/.local/share/nvim/lazy/nvim-treesitter/parser/cpp.so
- OK Parser: css                  ABI: 14, path: /home/evan/.local/share/nvim/lazy/nvim-treesitter/parser/css.so
- OK Parser: dockerfile           ABI: 14, path: /home/evan/.local/share/nvim/lazy/nvim-treesitter/parser/dockerfile.so
- OK Parser: html                 ABI: 14, path: /home/evan/.local/share/nvim/lazy/nvim-treesitter/parser/html.so
- OK Parser: java                 ABI: 14, path: /home/evan/.local/share/nvim/lazy/nvim-treesitter/parser/java.so
- OK Parser: javascript           ABI: 14, path: /home/evan/.local/share/nvim/lazy/nvim-treesitter/parser/javascript.so
- OK Parser: json                 ABI: 14, path: /home/evan/.local/share/nvim/lazy/nvim-treesitter/parser/json.so
- OK Parser: lua                  ABI: 14, path: /home/evan/.local/share/nvim/lazy/nvim-treesitter/parser/lua.so
- OK Parser: python               ABI: 14, path: /home/evan/.local/share/nvim/lazy/nvim-treesitter/parser/python.so
- OK Parser: rust                 ABI: 14, path: /home/evan/.local/share/nvim/lazy/nvim-treesitter/parser/rust.so
- OK Parser: typescript           ABI: 14, path: /home/evan/.local/share/nvim/lazy/nvim-treesitter/parser/typescript.so
- OK Parser: vue                  ABI: 14, path: /home/evan/.local/share/nvim/lazy/nvim-treesitter/parser/vue.so
- OK Parser: yaml                 ABI: 14, path: /home/evan/.local/share/nvim/lazy/nvim-treesitter/parser/yaml.so

==============================================================================
which-key: require("which-key.health").check()

WhichKey: checking conflicting keymaps ~
- OK No conflicting keymaps found

